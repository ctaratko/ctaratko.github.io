---
title: "Christopher Taratko"
about:
  template: trestles  # jolla  trestles  solana  marquee  broadside
  image: img/CoolKid.jpg
  image-width: 15em
  image-shape: round # rectangle  round  rounded
  
  links:
    - icon: linkedin
      text: LinkedIn
      href: https://linkedin.com/in/christopher-taratko-63a59524a/
    - icon: instagram
      text: Instagram
      href: https://instagram.com/ctaratko/
    - icon: github
      text: GitHub
      href: https://github.com/ctaratko
    - icon: file-earmark-pdf
      text: ResumÃ©
      href: https://ctaratko.github.io/ChristopherTaratkoResume.pdf
    - icon: mailbox
      text: Email
      href: mailto:cmt101@geneseo.edu
    - text: Jack Katz
      href: https://jackatzecon.github.io
    - text: Aaron Zalen
      href: https://1Aaronz.github.io
    - text: John Christanis
      href: https://JohnChristanis227.github.io
---
```{r}
#| echo: false
library(htmltools)
div(
  h1('About Me',
     style = css(
       color = '#14a',
       font_family = 'Libre Baskerville',
       font_size = '30px',
       text_align = "Center"
     )),
  p("I have majors in",
  span("Accounting & Economics", 
       style = css(
         font_weight = 600,
         )),
  ",with a Minor in",
  span("Data Analytics",
       style = css(
         font_weight = 600
         )),
  "at SUNY Geneseo. When not working on college assignments, I enjoy sailing, snowboarding, zip-lining, rock climbing and gaming. Other interesting facts about me is that I have a Level 1 Sailing Certification, I race sailboats competitively through the summer and winter seasons, and my hopes for my college education is to bring a balance within Data Analytics and Accounting. I see both of these majors as essential to each other, especially now that AI will cause job uncertainty in programmable positions and is being developed to predict markets."),
  h1("Education",
     style = css(
       color = '#14a',
       font_family = 'Libre Baskerville',
       font_size = '30px',
       text_align = "Center"
     )),
  p("State University of New York at Geneseo | Geneseo, NY  B.S in Accounting & Economics | Aug 2022 - May 2026 Minor in Data Analytics"),
  h1('Experience',
     style = css(
       color = '#14a',
       font_family = 'Libre Baskerville',
       font_size = '30px',
       text_align = "Center"
     )),
  p("Daidone Income Tax LLC - Mentorship"),
  p("LinkedIn Learning - Excel Tutorial"),
  p("LinkedIn Learning - Intermediate Excel"),
  p("LinkedIn Learning - Excel - Financial Functions in Depth"),
  p("LinkedIn Learning - Managing and Analyzing Data in Excel"),
  style = css(
    background = "linear-gradient(45deg, #bcd7e1, #c7dbf0)",
    padding = '25px',
    color = '#333333',
    border_radius = '10px'
  )
)
```

```{javascript}
# #| echo: false
# const DATA_ENTRY_SHEET_NAME = "1BT-M6uJ5OdLBnojAMorrafl7VW6GBaSbZMJJD3h-_08"; # 1BT-M6uJ5OdLBnojAMorrafl7VW6GBaSbZMJJD3h-_08
# var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(DATA_ENTRY_SHEET_NAME);
# 
# const doPost = (request = {}) => {
#   const { postData: { contents, type } = {} } = request;
#   if (!contents) {
#     console.error('No postData contents found');
#     return ContentService.createTextOutput('No postData contents found').setMimeType(ContentService.MimeType.TEXT);
#   }
#   var data = parseFormData(contents);
#   if (data) {
#     appendToGoogleSheet(data);
#     return ContentService.createTextOutput(JSON.stringify(data)).setMimeType(ContentService.MimeType.JSON);
#   } else {
#     return ContentService.createTextOutput('Error parsing form data').setMimeType(ContentService.MimeType.TEXT);
#   }
# };
# 
# function parseFormData(postData) {
#   if (typeof postData !== 'string') {
#     console.error('postData is not a string:', postData);
#     return null;
#   }
#   var data = {};
#   var parameters = postData.split('&');
#   for (var i = 0; i < parameters.length; i++) {
#     var [key, value] = parameters[i].split('=');
#     data[key] = decodeURIComponent(value.replace(/\+/g, ' '));
#   }
#   return data;
# }
# 
# function appendToGoogleSheet(data) {
#   var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
#   var rowData = headers.map(headerFld => data[headerFld] || "");
#   sheet.appendRow(rowData);
# }
# 
# 

```

```{javascript}
#| echo: false

const SPREADSHEET_ID = '1BT-M6uJ5OdLBnojAMorrafl7VW6GBaSbZMJJD3h-_08';  // Replace with your actual Spreadsheet ID
const DATA_ENTRY_SHEET_NAME = 'SpreadDataBase';  // Replace with the actual sheet name within your spreadsheet

var sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(DATA_ENTRY_SHEET_NAME);

const doPost = (request = {}) => {
  const { postData: { contents, type } = {} } = request;
  if (!contents) {
    console.error('No postData contents found');
    return ContentService.createTextOutput('No postData contents found').setMimeType(ContentService.MimeType.TEXT);
  }
  var data = parseFormData(contents);
  if (data) {
    appendToGoogleSheet(data);
    return ContentService.createTextOutput(JSON.stringify(data)).setMimeType(ContentService.MimeType.JSON);
  } else {
    return ContentService.createTextOutput('Error parsing form data').setMimeType(ContentService.MimeType.TEXT);
  }
};

function parseFormData(postData) {
  if (typeof postData !== 'string') {
    console.error('postData is not a string:', postData);
    return null;
  }
  var data = {};
  var parameters = postData.split('&');
  for (var i = 0; i < parameters.length; i++) {
    var [key, value] = parameters[i].split('=');
    data[key] = decodeURIComponent(value.replace(/\+/g, ' '));
  }
  return data;
}

function appendToGoogleSheet(data) {
  var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
  var rowData = headers.map(headerFld => data[headerFld] || "");
  sheet.appendRow(rowData);
}


```